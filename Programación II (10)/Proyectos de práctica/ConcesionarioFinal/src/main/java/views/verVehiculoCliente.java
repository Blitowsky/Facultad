/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import logica.Cliente;
import logica.Vehiculo;
import logica.Vendedor;

/**
 *
 * @author PROGRAMAR
 */
public class verVehiculoCliente extends javax.swing.JPanel {
    Vendedor vendedor = new Vendedor();
    Cliente cliente = new Cliente();
    FuncionRepetida fun = new FuncionRepetida();
    /**
     * Creates new form verVehiculoCliente
     */
    public verVehiculoCliente(Cliente cliente) {
        initComponents();
        mostrar("Vehiculos");
        this.cliente = cliente;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visor = new javax.swing.JTable();
        btnComprar = new javax.swing.JButton();
        btnVerDetalles = new javax.swing.JButton();

        contentPrincipal.setBackground(new java.awt.Color(0, 51, 102));

        visor.setBackground(new java.awt.Color(192, 192, 192));
        visor.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        visor.setForeground(new java.awt.Color(0, 51, 102));
        visor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Kilometros", "Condicion", "Tipo", "Precio"
            }
        ));
        visor.setGridColor(new java.awt.Color(25, 69, 113));
        visor.setSelectionForeground(new java.awt.Color(25, 69, 113));
        visor.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(visor);
        if (visor.getColumnModel().getColumnCount() > 0) {
            visor.getColumnModel().getColumn(0).setHeaderValue("Marca");
            visor.getColumnModel().getColumn(1).setHeaderValue("Modelo");
            visor.getColumnModel().getColumn(2).setHeaderValue("Kilometros");
            visor.getColumnModel().getColumn(3).setHeaderValue("Condicion");
            visor.getColumnModel().getColumn(4).setHeaderValue("Tipo");
            visor.getColumnModel().getColumn(5).setHeaderValue("Precio");
        }

        btnComprar.setBackground(new java.awt.Color(192, 192, 192));
        btnComprar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnComprar.setForeground(new java.awt.Color(0, 51, 102));
        btnComprar.setText("COMPRAR");
        btnComprar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnComprar.setPreferredSize(new java.awt.Dimension(100, 20));
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        btnVerDetalles.setBackground(new java.awt.Color(192, 192, 192));
        btnVerDetalles.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnVerDetalles.setForeground(new java.awt.Color(0, 51, 102));
        btnVerDetalles.setText("VER");
        btnVerDetalles.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVerDetalles.setPreferredSize(new java.awt.Dimension(60, 20));
        btnVerDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDetallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentPrincipalLayout = new javax.swing.GroupLayout(contentPrincipal);
        contentPrincipal.setLayout(contentPrincipalLayout);
        contentPrincipalLayout.setHorizontalGroup(
            contentPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPrincipalLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(contentPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(contentPrincipalLayout.createSequentialGroup()
                        .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVerDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        contentPrincipalLayout.setVerticalGroup(
            contentPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(contentPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerDetalles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        if(visor.getRowCount() > 0) {
            if(visor.getSelectedRow() != -1) {
                try {
                    int idVehiculo = Integer.parseInt(String.valueOf(visor.getValueAt(visor.getSelectedRow(), 0)));
                    int idVendedor = vendedor.traerVendedorAsociado(idVehiculo);
                    vendedor.setIdVendedor(idVendedor);
                    vendedor.venderVehiculo(idVehiculo, idVendedor);
                    mostrar("Vehiculos");
                    vendedor.relacionarCliente(cliente.getIdCliente(), idVendedor, "Compra vehiculo subido por él");
                } catch (SQLException ex) {
                    Logger.getLogger(verVehiculoCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } else {
               fun.mostrarMensaje("No se ha seleccionado ningun vehículo", "Error", "¡Erro!");
            }
        } else {
            fun.mostrarMensaje("No se ha seleccionado ningun vehículo", "Error", "¡Erro!");
        }


    }//GEN-LAST:event_btnComprarActionPerformed


    private void btnVerDetallesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerDetallesActionPerformed
        if(visor.getRowCount() > 0) {
            if(visor.getSelectedRow() != -1) {
                try {
                    int idVehiculo = Integer.parseInt(String.valueOf(visor.getValueAt(visor.getSelectedRow(), 0)));
                    Vehiculo vehiculo = vendedor.traerVehiculo(idVehiculo);
                    VerEnDetalle ver = new VerEnDetalle(vehiculo);
                    ver.setVisible(true);
                    ver.setLocationRelativeTo(null);
                } catch (SQLException ex) {
                    Logger.getLogger(verVehiculoCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
               fun.mostrarMensaje("No se ha seleccionado ningun vehículo", "Error", "¡Erro!");
            }
        } else {
            fun.mostrarMensaje("No se ha seleccionado ningun vehículo", "Error", "¡Erro!");
        }
    }//GEN-LAST:event_btnVerDetallesActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    public void mostrar(String tabla) {
        List<String[]> vehiculos = vendedor.mostrarInventario(tabla);

        DefaultTableModel model = new DefaultTableModel(){

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        visor.getTableHeader().setResizingAllowed(false);
        model.addColumn("ID");
        model.addColumn("Marca");
        model.addColumn("Modelo");
        model.addColumn("Kilometros");
        model.addColumn("Condición");
        model.addColumn("Tipo");
        model.addColumn("Precio");

        for (String[] vehiculo : vehiculos) {
            model.addRow(vehiculo);
        }

        visor.setModel(model);

    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnVerDetalles;
    private javax.swing.JPanel contentPrincipal;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable visor;
    // End of variables declaration//GEN-END:variables

}