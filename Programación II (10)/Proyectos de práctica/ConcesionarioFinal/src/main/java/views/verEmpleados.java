/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Gerente;

/**
 *
 * @author Facultad
 */
public class verEmpleados extends javax.swing.JPanel {
    Gerente gerente = new Gerente();
    FuncionRepetida func = new FuncionRepetida();
    /**
     * Creates new form verEmpleados
     */
    public verEmpleados() {
        initComponents();
        mostrar("Vendedores");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentVerEmpleados = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visor = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnVehiAs = new javax.swing.JButton();
        btnClienteAs = new javax.swing.JButton();

        contentVerEmpleados.setBackground(new java.awt.Color(0, 51, 102));
        contentVerEmpleados.setPreferredSize(new java.awt.Dimension(560, 500));

        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(192, 192, 192));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VENDEDORES");

        visor.setBackground(new java.awt.Color(192, 192, 192));
        visor.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        visor.setForeground(new java.awt.Color(0, 51, 102));
        visor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Dni", "Años Experiencia", "Cantidad de Ventas", "Sueldo"
            }
        ));
        jScrollPane1.setViewportView(visor);

        btnEliminar.setBackground(new java.awt.Color(192, 192, 192));
        btnEliminar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 51, 102));
        btnEliminar.setText("DESPEDIR");
        btnEliminar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(192, 192, 192));
        btnModificar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 51, 102));
        btnModificar.setText("EDITAR");
        btnModificar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnVehiAs.setBackground(new java.awt.Color(192, 192, 192));
        btnVehiAs.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnVehiAs.setForeground(new java.awt.Color(0, 51, 102));
        btnVehiAs.setText("VER VEHICULOS");
        btnVehiAs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVehiAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVehiAsActionPerformed(evt);
            }
        });

        btnClienteAs.setBackground(new java.awt.Color(192, 192, 192));
        btnClienteAs.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        btnClienteAs.setForeground(new java.awt.Color(0, 51, 102));
        btnClienteAs.setText("VER CLIENTES");
        btnClienteAs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClienteAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteAsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentVerEmpleadosLayout = new javax.swing.GroupLayout(contentVerEmpleados);
        contentVerEmpleados.setLayout(contentVerEmpleadosLayout);
        contentVerEmpleadosLayout.setHorizontalGroup(
            contentVerEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentVerEmpleadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentVerEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(contentVerEmpleadosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClienteAs, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVehiAs, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(contentVerEmpleadosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(368, 368, 368))
        );
        contentVerEmpleadosLayout.setVerticalGroup(
            contentVerEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentVerEmpleadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(contentVerEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnModificar)
                    .addComponent(btnVehiAs)
                    .addComponent(btnClienteAs))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentVerEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentVerEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(visor.getRowCount() > 0) {
            if(visor.getSelectedRow() != -1) {
                int idVendedor = Integer.parseInt(String.valueOf(visor.getValueAt(visor.getSelectedRow(), 0)));
                ModificarVendedor modifVend = new ModificarVendedor(idVendedor, this);
                modifVend.setVisible(true);
                modifVend.setLocationRelativeTo(null);
                
            } else {
                func.mostrarMensaje("No se ha seleccionado ningún vendedor para ver en detalle", "Error", "¡ERROR!");
            }
        } else {
            func.mostrarMensaje("No se encuentran vendedores registrados", "Error", "¡ERROR!");
        }
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        
        if(visor.getRowCount() > 0) {
            if(visor.getSelectedRow() != -1) {
                try {
                    int idVendedor = Integer.parseInt(String.valueOf(visor.getValueAt(visor.getSelectedRow(), 0)));
                    gerente.eliminarVendedor(idVendedor);
                    func.mostrarMensaje("Vendedor eliminado con éxito", "Info", "Borrado exitoso");
                } catch (SQLException ex) {
                    Logger.getLogger(verClientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                func.mostrarMensaje("No se ha seleccionado ningún vendedor para eliminar", "Error", "¡ERROR!");
            }
        } else {
            func.mostrarMensaje("No se encuentran vendedores registrados", "Error", "¡ERROR!");
        }

        mostrar("Vendedores");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnVehiAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVehiAsActionPerformed
        if(visor.getRowCount() > 0) {
            if(visor.getSelectedRow() != -1) {
                int idVendedor = Integer.parseInt(String.valueOf(visor.getValueAt(visor.getSelectedRow(), 0)));
                VehiculosAsociados venAs = new VehiculosAsociados(idVendedor);
                venAs.setVisible(true);
                venAs.setLocationRelativeTo(null);
            } else {
                func.mostrarMensaje("No se ha seleccionado ningún vendedor para ver en detalle", "Error", "¡ERROR!");
            }
        } else {
            func.mostrarMensaje("No se encuentran vendedor registrados", "Error", "¡ERROR!");
        }
    }//GEN-LAST:event_btnVehiAsActionPerformed

    private void btnClienteAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteAsActionPerformed
        if(visor.getRowCount() > 0) {
            if(visor.getSelectedRow() != -1) {
                int idVendedor = Integer.parseInt(String.valueOf(visor.getValueAt(visor.getSelectedRow(), 0)));
                VerClientesAsociados venAs = new VerClientesAsociados(idVendedor);
                venAs.setVisible(true);
                venAs.setLocationRelativeTo(null);
            } else {
                func.mostrarMensaje("No se ha seleccionado ningún vendedor para ver en detalle", "Error", "¡ERROR!");
            }
        } else {
            func.mostrarMensaje("No se encuentran vendedor registrados", "Error", "¡ERROR!");
        }
    }//GEN-LAST:event_btnClienteAsActionPerformed

    public void mostrar(String tabla) {
        List<String[]> vendedores = gerente.mostrarVendedores(tabla, "C");

        DefaultTableModel model = new DefaultTableModel(){

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        visor.getTableHeader().setResizingAllowed(false);
        
        
        
        model.addColumn("ID");
        model.addColumn("Nombre");
        model.addColumn("Apellido");
        model.addColumn("Dni");
        model.addColumn("AniosExp");
        model.addColumn("Sueldo");
        model.addColumn("CantVentas");


        for (String[] vendedor : vendedores) {
            model.addRow(vendedor);
        }

        visor.setModel(model);

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClienteAs;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVehiAs;
    private javax.swing.JPanel contentVerEmpleados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable visor;
    // End of variables declaration//GEN-END:variables
}
